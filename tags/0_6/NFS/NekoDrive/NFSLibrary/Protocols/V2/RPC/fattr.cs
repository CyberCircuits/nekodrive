/*
 * Automatically generated by jrpcgen 1.0.7 on 27/08/2010
 * jrpcgen is part of the "Remote Tea.Net" ONC/RPC package for C#
 * See http://remotetea.sourceforge.net for details
 */
using org.acplt.oncrpc;

public class fattr : XdrAble {
    public int type;
    public int mode;
    public int nlink;
    public int uid;
    public int gid;
    public int size;
    public int blocksize;
    public int rdev;
    public int blocks;
    public int fsid;
    public int fileid;
    public nfstimeval atime;
    public nfstimeval mtime;
    public nfstimeval ctime;

    public fattr() {
    }

    public fattr(XdrDecodingStream xdr) {
        xdrDecode(xdr);
    }

    public void xdrEncode(XdrEncodingStream xdr) {
        xdr.xdrEncodeInt(type);
        xdr.xdrEncodeInt(mode);
        xdr.xdrEncodeInt(nlink);
        xdr.xdrEncodeInt(uid);
        xdr.xdrEncodeInt(gid);
        xdr.xdrEncodeInt(size);
        xdr.xdrEncodeInt(blocksize);
        xdr.xdrEncodeInt(rdev);
        xdr.xdrEncodeInt(blocks);
        xdr.xdrEncodeInt(fsid);
        xdr.xdrEncodeInt(fileid);
        atime.xdrEncode(xdr);
        mtime.xdrEncode(xdr);
        ctime.xdrEncode(xdr);
    }

    public void xdrDecode(XdrDecodingStream xdr) {
        type = xdr.xdrDecodeInt();
        mode = xdr.xdrDecodeInt();
        nlink = xdr.xdrDecodeInt();
        uid = xdr.xdrDecodeInt();
        gid = xdr.xdrDecodeInt();
        size = xdr.xdrDecodeInt();
        blocksize = xdr.xdrDecodeInt();
        rdev = xdr.xdrDecodeInt();
        blocks = xdr.xdrDecodeInt();
        fsid = xdr.xdrDecodeInt();
        fileid = xdr.xdrDecodeInt();
        atime = new nfstimeval(xdr);
        mtime = new nfstimeval(xdr);
        ctime = new nfstimeval(xdr);
    }

}
// End of fattr.cs
